-- Migration: Create {{tableName}} table with RLS policies and seed data
-- Generated: {{timestamp}}
-- Description: {{description}}

-- Create the {{tableName}} table
CREATE TABLE IF NOT EXISTS public.{{tableName}} (
  id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
  user_id uuid REFERENCES auth.users(id) ON DELETE CASCADE NOT NULL,
  {{#each tableColumns}}
  {{this}},
  {{/each}}
  created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
  updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);

{{#if includeRLS}}
-- Enable Row Level Security
ALTER TABLE public.{{tableName}} ENABLE ROW LEVEL SECURITY;

-- Create RLS policies
-- Users can view their own records
CREATE POLICY "Users can view own {{tableName}}" ON public.{{tableName}}
  FOR SELECT USING (auth.uid() = user_id);

-- Users can insert their own records
CREATE POLICY "Users can insert own {{tableName}}" ON public.{{tableName}}
  FOR INSERT WITH CHECK (auth.uid() = user_id);

-- Users can update their own records
CREATE POLICY "Users can update own {{tableName}}" ON public.{{tableName}}
  FOR UPDATE USING (auth.uid() = user_id);

-- Users can delete their own records
CREATE POLICY "Users can delete own {{tableName}}" ON public.{{tableName}}
  FOR DELETE USING (auth.uid() = user_id);
{{/if}}

-- Create indexes for better performance
CREATE INDEX IF NOT EXISTS {{tableName}}_user_id_idx ON public.{{tableName}}(user_id);
CREATE INDEX IF NOT EXISTS {{tableName}}_created_at_idx ON public.{{tableName}}(created_at);

-- Add updated_at trigger
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = timezone('utc'::text, now());
  RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_{{tableName}}_updated_at
  BEFORE UPDATE ON public.{{tableName}}
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

{{#if includeSeedData}}
-- Seed data (optional)
-- You can add sample data here for development/testing
-- INSERT INTO public.{{tableName}} (user_id, title, description) VALUES
--   ('00000000-0000-0000-0000-000000000000', 'Sample {{featureName}}', 'This is a sample record for development');
{{/if}}

-- Grant necessary permissions
GRANT ALL ON public.{{tableName}} TO authenticated;
GRANT ALL ON public.{{tableName}} TO service_role;
